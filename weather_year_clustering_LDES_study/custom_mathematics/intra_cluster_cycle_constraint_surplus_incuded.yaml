#
#          Constraints on SOC between Operational Years and System Defining Years
#          to capture surplus
#

constraints:
  # updated version of balance_storage that accounts for surplus in clusters
  balance_storage:
    description: >-
      Fix the quantity of carrier stored in a `storage` technology at the end of each timestep
      based on the net flow of carrier charged and discharged
      and the quantity of carrier stored at the start of the timestep.
    foreach: [nodes, techs, timesteps]
    where: (include_storage=true or base_tech=storage) AND NOT (base_tech=supply OR base_tech=demand)
    equations:
      - where: timesteps=get_val_at_index(timesteps=8760) #i.e. where at the beginning of the first System Defining year 
        expression: >- #let storage be multiplied by the accumulated difference across the operational years
          storage == $storage_previous_step + (v_surplus_factor-1)*($storage_previous_step-roll(storage,timesteps=8760)) -
            sum(flow_out_inc_eff, over=carriers) + sum(flow_in_inc_eff, over=carriers)
      - where: NOT timesteps=get_val_at_index(timesteps=8760)
        expression: >-
          storage == $storage_previous_step -
            sum(flow_out_inc_eff, over=carriers) + sum(flow_in_inc_eff, over=carriers)
    sub_expressions:
      storage_previous_step: &storage_previous_step
        - where: timesteps=get_val_at_index(timesteps=0) AND NOT cyclic_storage=True
          expression: storage_initial * storage_cap
        - where: >-
            (
              (timesteps=get_val_at_index(timesteps=0) AND cyclic_storage=True)
              OR NOT timesteps=get_val_at_index(timesteps=0)
            ) AND NOT cluster_first_timestep=True
          expression: (1 - storage_loss) ** roll(timestep_resolution, timesteps=1) * roll(storage, timesteps=1)
        - where: >-
            cluster_first_timestep=True AND NOT
            (timesteps=get_val_at_index(timesteps=0) AND NOT cyclic_storage=True)
          expression: >-
            (1 - storage_loss) **
            select_from_lookup_arrays(timestep_resolution, timesteps=lookup_cluster_last_timestep) *
            select_from_lookup_arrays(storage, timesteps=lookup_cluster_last_timestep)

# variables:
#   v_surplus_factor:
#     title: Surplus Factor
#     description: >-
#       a factor to account for accrued surplus of energy within storage system across weighted operational years
#       cycle_count_limit:
#     default: 9 # by default for two year cluster, set to 8 for three year
#     foreach: [nodes, techs, carriers]
#     where: base_tech=storage
#     domain: real
#     bounds:
#       min: 0 
#       max: 10